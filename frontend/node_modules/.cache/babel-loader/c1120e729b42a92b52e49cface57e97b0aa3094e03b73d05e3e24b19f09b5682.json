{"ast":null,"code":"var _jsxFileName = \"D:\\\\metaschool_web\\\\frontend\\\\src\\\\components\\\\Sidebar\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ps;\nfunction Sidebar(props) {\n  _s();\n  var _this = this;\n  var location = useLocation();\n  var sidebarRef = React.useRef(null);\n  var activeRoute = function activeRoute(routeName) {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(function () {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  var routes = props.routes,\n    rtlActive = props.rtlActive,\n    logo = props.logo;\n  var logoImg = null;\n  var logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = /*#__PURE__*/_jsxDEV(\"a\", {\n        href: logo.outterLink,\n        className: \"simple-text logo-mini\",\n        target: \"_blank\",\n        onClick: props.toggleSidebar,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n      logoText = /*#__PURE__*/_jsxDEV(\"a\", {\n        href: logo.outterLink,\n        className: \"simple-text logo-normal\",\n        target: \"_blank\",\n        onClick: props.toggleSidebar,\n        children: logo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    } else {\n      logoImg = /*#__PURE__*/_jsxDEV(Link, {\n        to: logo.innerLink,\n        className: \"simple-text logo-mini\",\n        onClick: props.toggleSidebar,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n      logoText = /*#__PURE__*/_jsxDEV(Link, {\n        to: logo.innerLink,\n        className: \"simple-text logo-normal\",\n        onClick: props.toggleSidebar,\n        children: logo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(BackgroundColorContext.Consumer, {\n    children: function children(_ref) {\n      var color = _ref.color;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        data: color,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-wrapper\",\n          ref: sidebarRef,\n          children: [logoImg !== null || logoText !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: [logoImg, logoText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, _this) : null, /*#__PURE__*/_jsxDEV(Nav, {\n            children: routes.map(function (prop, key) {\n              if (prop.redirect) return null;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\"),\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: prop.layout + prop.path,\n                  className: \"nav-link\",\n                  activeClassName: \"active\",\n                  onClick: props.toggleSidebar,\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: prop.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: rtlActive ? prop.rtlName : prop.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, _this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"D7Jqss+EaZ4C9XG5NUxwx/SUfWU=\", false, function () {\n  return [useLocation];\n});\n_c = Sidebar;\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","NavLink","Link","useLocation","PropTypes","PerfectScrollbar","Nav","ReactstrapNavLink","BackgroundColorContext","jsxDEV","_jsxDEV","ps","Sidebar","props","_s","_this","location","sidebarRef","useRef","activeRoute","routeName","pathname","useEffect","navigator","platform","indexOf","current","suppressScrollX","suppressScrollY","cleanup","destroy","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","href","className","target","onClick","toggleSidebar","children","src","imgSrc","alt","fileName","_jsxFileName","lineNumber","columnNumber","text","to","innerLink","Consumer","_ref","color","data","ref","map","prop","key","redirect","path","pro","layout","activeClassName","icon","rtlName","name","_c","propTypes","bool","arrayOf","object","shape","string","node","$RefreshReg$"],"sources":["D:/metaschool_web/frontend/src/components/Sidebar/Sidebar.js"],"sourcesContent":["import React from \"react\";\r\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\r\nimport {\r\n  BackgroundColorContext,\r\n} from \"contexts/BackgroundColorContext\";\r\n\r\nvar ps;\r\n\r\nfunction Sidebar(props) {\r\n  const location = useLocation();\r\n  const sidebarRef = React.useRef(null);\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname === routeName ? \"active\" : \"\";\r\n  };\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(sidebarRef.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n    };\r\n  });\r\n  const { routes, rtlActive, logo } = props;\r\n  let logoImg = null;\r\n  let logoText = null;\r\n  if (logo !== undefined) {\r\n    if (logo.outterLink !== undefined) {\r\n      logoImg = (\r\n        <a\r\n          href={logo.outterLink}\r\n          className=\"simple-text logo-mini\"\r\n          target=\"_blank\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          <div className=\"logo-img\">\r\n            <img src={logo.imgSrc} alt=\"react-logo\" />\r\n          </div>\r\n        </a>\r\n      );\r\n      logoText = (\r\n        <a\r\n          href={logo.outterLink}\r\n          className=\"simple-text logo-normal\"\r\n          target=\"_blank\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          {logo.text}\r\n        </a>\r\n      );\r\n    } else {\r\n      logoImg = (\r\n        <Link\r\n          to={logo.innerLink}\r\n          className=\"simple-text logo-mini\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          <div className=\"logo-img\">\r\n            <img src={logo.imgSrc} alt=\"react-logo\" />\r\n          </div>\r\n        </Link>\r\n      );\r\n      logoText = (\r\n        <Link\r\n          to={logo.innerLink}\r\n          className=\"simple-text logo-normal\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          {logo.text}\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <div className=\"sidebar\" data={color}>\r\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\r\n            {logoImg !== null || logoText !== null ? (\r\n              <div className=\"logo\">\r\n                {logoImg}\r\n                {logoText}\r\n              </div>\r\n            ) : null}\r\n            <Nav>\r\n              {routes.map((prop, key) => {\r\n                if (prop.redirect) return null;\r\n                return (\r\n                  <li\r\n                    className={\r\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\r\n                    }\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className=\"nav-link\"\r\n                      activeClassName=\"active\"\r\n                      onClick={props.toggleSidebar}\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\r\n                    </NavLink>\r\n                  </li>\r\n                );\r\n              })}\r\n            </Nav>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string\r\n  })\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}